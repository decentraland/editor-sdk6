{
  "name": "decentraland",
  "displayName": "Decentraland Editor",
  "description": "Visual Studio Code extension for Decentraland projects",
  "icon": "resources/logo128x128.png",
  "version": "0.0.0-development",
  "publisher": "DecentralandFoundation",
  "private": true,
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/decentraland/editor"
  },
  "engines": {
    "node": "^16.0.0",
    "vscode": "^1.65.0"
  },
  "categories": [
    "Extension Packs"
  ],
  "activationEvents": [
    "onDebug",
    "onView:decentraland",
    "onView:dependencies",
    "onCustomEditor:decentraland.GLTFPreview",
    "onCommand:decentraland.commands.update",
    "onCommand:decentraland.commands.install",
    "onCommand:decentraland.commands.uninstall",
    "onCommand:decentraland.commands.start",
    "onCommand:decentraland.commands.deploy",
    "onCommand:decentraland.commands.deployCustom",
    "onCommand:dependencies.commands.delete",
    "onCommand:dependencies.commands.update",
    "onCommand:walkthrough.createProject",
    "onCommand:walkthrough.viewCode"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "decentraland",
          "title": "Decentraland",
          "icon": "resources/activitybar.svg"
        }
      ]
    },
    "views": {
      "decentraland": [
        {
          "id": "decentraland",
          "name": "Decentraland"
        },
        {
          "id": "dependencies",
          "name": "Dependencies",
          "when": "decentraland.isDCL"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "decentraland",
        "contents": "In order to use the Decentraland features you need to open a folder with an existing project, or open a folder on which create a new project.\n[Open Folder](command:vscode.openFolder)",
        "when": "workbenchState == empty"
      },
      {
        "view": "decentraland",
        "contents": "The current folder is empty, go ahead and create a new Decentraland project:\n[Create Project](command:decentraland.commands.init)\nTo learn more [read our docs](https://docs.decentraland.org/).",
        "when": "workbenchState != empty && !decentraland.isDCL && decentraland.isEmpty"
      },
      {
        "view": "decentraland",
        "contents": "The current folder does not contain a Decentraland project. Open a folder with an existing project, or an empty folder to scaffold a new project:\n[Open Folder](command:vscode.openFolder)\nTo learn more [read our docs](https://docs.decentraland.org/).",
        "when": "workbenchState != empty && !decentraland.isDCL && !decentraland.isEmpty"
      },
      {
        "view": "decentraland",
        "contents": "You can preview and try out your scene:\n[Run Scene](command:decentraland.commands.start)",
        "when": "workbenchState != empty && decentraland.isDCL"
      },
      {
        "view": "decentraland",
        "contents": "Once you are done building your scene, you can publish it to the world:\n[Publish Scene](command:decentraland.commands.deploy)",
        "when": "workbenchState != empty && decentraland.isDCL"
      }
    ],
    "customEditors": [
      {
        "viewType": "decentraland.GLTFPreview",
        "displayName": "Preview",
        "selector": [
          {
            "filenamePattern": "*.{gltf,glb}"
          }
        ],
        "priority": "default"
      }
    ],
    "commands": [
      {
        "command": "decentraland.commands.init",
        "title": "Create Project",
        "enablement": "!decentraland.isDCL",
        "category": "Decentraland"
      },
      {
        "command": "decentraland.commands.install",
        "title": "Install Package",
        "icon": "$(add)",
        "enablement": "decentraland.isDCL",
        "category": "Decentraland"
      },
      {
        "command": "decentraland.commands.uninstall",
        "title": "Uninstall Package",
        "icon": "$(remove)",
        "category": "Decentraland"
      },
      {
        "command": "decentraland.commands.update",
        "title": "Update Dependencies",
        "icon": "$(sync)",
        "category": "Decentraland"
      },
      {
        "command": "dependencies.commands.update",
        "title": "Update",
        "icon": "$(arrow-up)",
        "category": "Dependencies"
      },
      {
        "command": "dependencies.commands.delete",
        "title": "Delete",
        "icon": "$(trash)",
        "category": "Dependencies"
      },
      {
        "command": "decentraland.commands.browser.run",
        "title": "Open in browser",
        "category": "Decentraland"
      },
      {
        "command": "decentraland.commands.browser.deploy",
        "title": "Open in browser",
        "category": "Decentraland"
      },
      {
        "command": "decentraland.commands.deploy",
        "title": "Publish Scene",
        "icon": "$(rocket)",
        "category": "Decentraland"
      },
      {
        "command": "decentraland.commands.deployCustom",
        "title": "Publish Scene To Custom Catalyst",
        "icon": "$(rocket)",
        "category": "Decentraland"
      },
      {
        "command": "decentraland.commands.start",
        "title": "Run Scene",
        "icon": "$(play)",
        "category": "Decentraland"
      },
      {
        "command": "decentraland.commands.getDebugURL",
        "title": "Get Debug URL",
        "category": "Decentraland"
      },
      {
        "command": "decentraland.commands.restart",
        "title": "Restart Server",
        "icon": "$(debug-restart)",
        "category": "Decentraland"
      }
    ],
    "keybindings": [
      {
        "command": "decentraland.commands.start",
        "key": "ctrl+e",
        "mac": "cmd+e",
        "when": "decentraland.isDCL"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "decentraland.commands.browser.run",
          "when": "false"
        },
        {
          "command": "decentraland.commands.browser.deploy",
          "when": "false"
        },
        {
          "command": "dependencies.commands.delete",
          "when": "false"
        },
        {
          "command": "dependencies.commands.update",
          "when": "false"
        },
        {
          "command": "decentraland.commands.getDebugURL",
          "when": "false"
        }
      ],
      "editor/title": [
        {
          "command": "decentraland.commands.browser.run",
          "group": "navigation",
          "when": "activeWebviewPanelId == decentraland.DCLPreview"
        },
        {
          "command": "decentraland.commands.browser.deploy",
          "group": "navigation",
          "when": "activeWebviewPanelId == decentraland.DCLDeploy"
        }
      ],
      "view/title": [
        {
          "command": "decentraland.commands.deployCustom",
          "when": "view == decentraland && decentraland.isDCL",
          "group": "1_actions"
        },
        {
          "command": "decentraland.commands.restart",
          "when": "view == decentraland && decentraland.isDCL",
          "group": "navigation"
        },
        {
          "command": "decentraland.commands.install",
          "when": "view == dependencies",
          "group": "navigation@1"
        },
        {
          "command": "decentraland.commands.uninstall",
          "when": "view == dependencies",
          "group": "navigation@2"
        },
        {
          "command": "decentraland.commands.update",
          "when": "view == dependencies",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "dependencies.commands.update",
          "when": "view == dependencies && viewItem == dependency",
          "group": "inline@1"
        },
        {
          "command": "dependencies.commands.delete",
          "when": "view == dependencies && viewItem == dependency",
          "group": "inline@2"
        }
      ]
    },
    "walkthroughs": [
      {
        "id": "decentraland",
        "title": "Decentraland",
        "description": "This guide will walk you through creating a Decentraland scene.",
        "steps": [
          {
            "id": "open",
            "title": "Open Folder",
            "description": "Open an empty folder to create where you will create your Decentraland project.\n[Open Folder](command:vscode.openFolder)",
            "media": {
              "image": "resources/activitybar.svg",
              "altText": "Empty image"
            },
            "completionEvents": [
              "onCommand:command:vscode.openFolder"
            ],
            "when": "workbenchState == empty"
          },
          {
            "id": "init",
            "title": "Create project",
            "description": "Scaffold an example scene project.\n[Create Project](command:walkthrough.createProject)",
            "media": {
              "image": "resources/activitybar.svg",
              "altText": "Empty image"
            },
            "completionEvents": [
              "onCommand:walkthrough.createProject"
            ],
            "when": "workbenchState != empty"
          },
          {
            "id": "run",
            "title": "Run scene",
            "description": "Run the scene you just created, try interacting with the cube.\n[Run Scene](command:decentraland.commands.start)",
            "media": {
              "image": "resources/activitybar.svg",
              "altText": "Run scene"
            },
            "completionEvents": [
              "onCommand:decentraland.commands.start"
            ],
            "when": "workbenchState != empty"
          },
          {
            "id": "code",
            "title": "View code",
            "description": "Open the source code of the scene, try making changes to it and see them reflected on the preview screen.\n[View Code](command:walkthrough.viewCode)",
            "media": {
              "image": "resources/activitybar.svg",
              "altText": "View code"
            },
            "completionEvents": [
              "onCommand:walkthrough.viewCode"
            ],
            "when": "workbenchState != empty"
          },
          {
            "id": "docs",
            "title": "Read docs",
            "description": "You can learn more by reading our docs.\n[Open Docs](https://docs.decentraland.org)",
            "media": {
              "image": "resources/activitybar.svg",
              "altText": "Read docs"
            },
            "completionEvents": [
              "onLink:https://docs.decentraland.org"
            ],
            "when": "workbenchState != empty"
          }
        ]
      }
    ],
    "breakpoints": [
      {
        "language": "typescript"
      }
    ],
    "debuggers": [
      {
        "type": "decentraland",
        "languages": [
          "typescript"
        ],
        "label": "Decentraland",
        "initialConfigurations": [
          {
            "type": "chrome",
            "request": "launch",
            "name": "Debug",
            "url": "${command:decentraland.commands.getDebugURL}",
            "webRoot": "${workspaceFolder}/src"
          }
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "lint": "eslint . --ext .ts,.tsx",
    "watch": "tsc -w -p ./",
    "deploy": "vsce publish",
    "test": "jest",
    "test:coverage": "jest --coverage"
  },
  "devDependencies": {
    "@types/cross-spawn": "^6.0.2",
    "@types/express": "^4.17.14",
    "@types/gunzip-maybe": "^1.4.0",
    "@types/is-running": "^2.1.0",
    "@types/node": "^16.11.7",
    "@types/node-fetch": "^2.6.2",
    "@types/npm": "^7.19.0",
    "@types/rimraf": "^3.0.2",
    "@types/tar-fs": "^2.0.1",
    "@types/vscode": "^1.65.0",
    "eslint": "^8.13.0",
    "prettier": "^2.7.1",
    "typescript": "^4.8.4",
    "vsce": "^2.13.0"
  },
  "prettier": {
    "printWidth": 80,
    "singleQuote": true,
    "semi": false
  },
  "dependencies": {
    "@dcl/schemas": "^5.18.1",
    "@dcl/sdk": "^7.0.5",
    "@dcl/wearable-preview": "^1.14.0",
    "@types/analytics-node": "^3.1.9",
    "@types/cmd-shim": "^5.0.0",
    "@types/jest": "^29.2.3",
    "@types/semver": "^7.3.13",
    "@types/unzip-stream": "^0.3.1",
    "analytics-node": "^6.2.0",
    "chokidar": "^3.5.3",
    "cmd-shim": "^6.0.0",
    "cross-spawn": "^7.0.3",
    "decentraland": "^3.14.2",
    "decentraland-ecs": "^6.11.11",
    "dotenv": "^16.0.3",
    "express": "^4.18.2",
    "fp-future": "^1.0.1",
    "gunzip-maybe": "^1.4.2",
    "is-running": "^2.1.0",
    "jest": "^29.3.1",
    "mitt": "^3.0.0",
    "node-fetch": "^2.6.7",
    "node-fetch-progress": "^1.0.2",
    "npm": "^8.19.2",
    "open": "^8.4.0",
    "rimraf": "^3.0.2",
    "rollbar": "^2.25.2",
    "semver": "^7.3.8",
    "tar-fs": "^2.1.1",
    "ts-jest": "^29.0.3",
    "ts-node": "^10.9.1",
    "unzip-stream": "^0.3.1",
    "uuidv4": "^6.2.13"
  }
}
